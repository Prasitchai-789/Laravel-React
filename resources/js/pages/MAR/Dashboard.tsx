import AppLayout from '@/layouts/app-layout';
import { BreadcrumbItem } from '@/types';
import { useState } from 'react';
import ProductPieChart from '../../components/MAR/ProductPieChart';
import RecentSalesTable from '../../components/MAR/RecentSalesTable';
import StatCard from '../../components/MAR/StatCard';
import { mockData } from '../../data/mockData';
import { SalesChartVariants } from '@/components/MAR/SalesChart';

const Dashboard = () => {
    const [dateRange, setDateRange] = useState('monthly');
    const [selectedProduct, setSelectedProduct] = useState('all');

    const products = [
        { id: 'all', name: '‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î' },
        { id: 'palm_oil', name: '‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô‡∏õ‡∏≤‡∏•‡πå‡∏°‡∏î‡∏¥‡∏ö' },
        { id: 'palm_seeds', name: '‡πÄ‡∏°‡∏•‡πá‡∏î‡πÉ‡∏ô‡∏õ‡∏≤‡∏•‡πå‡∏°' },
        { id: 'palm_shell', name: '‡∏Å‡∏∞‡∏•‡∏≤‡∏õ‡∏≤‡∏•‡πå‡∏°' },
        { id: 'chopped_bunch', name: '‡∏ó‡∏∞‡∏•‡∏≤‡∏¢‡∏™‡∏±‡∏ö' },
        { id: 'empty_bunch', name: '‡∏ó‡∏∞‡∏•‡∏≤‡∏¢‡∏õ‡∏≤‡∏•‡πå‡∏°‡πÄ‡∏õ‡∏•‡πà‡∏≤' },
        { id: 'palm_fiber', name: '‡πÉ‡∏¢‡∏õ‡∏≤‡∏•‡πå‡∏°' },
    ];

    const breadcrumbs: BreadcrumbItem[] = [
        { title: 'Dashboard', href: '/dashboard' },
        { title: 'Expense Documents', href: '/memo/documents' },
    ];

    return (
        <AppLayout breadcrumbs={breadcrumbs}>
            <div className="min-h-screen bg-gray-50 p-6">
                <div className="mx-auto max-w-7xl">
                    {/* Header */}
                    <div className="mb-8">
                        <h1 className="text-3xl font-bold text-gray-900">‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h1>
                        <p className="mt-2 text-gray-600">‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏ó‡∏≤‡∏á‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à</p>
                    </div>

                    {/* Filters */}
                    <div className="mb-6 flex flex-col items-start justify-between gap-4 md:flex-row md:items-center">
                        <div className="flex flex-wrap gap-2">
                            {products.map((product) => (
                                <button
                                    key={product.id}
                                    onClick={() => setSelectedProduct(product.id)}
                                    className={`rounded-full px-4 py-2 text-sm font-medium transition-colors ${
                                        selectedProduct === product.id
                                            ? 'bg-blue-600 text-white'
                                            : 'border border-gray-300 bg-white text-gray-700 hover:bg-gray-50'
                                    }`}
                                >
                                    {product.name}
                                </button>
                            ))}
                        </div>

                        <div className="flex gap-2">
                            <select
                                value={dateRange}
                                onChange={(e) => setDateRange(e.target.value)}
                                className="rounded-lg border border-gray-300 bg-white px-4 py-2 focus:ring-2 focus:ring-blue-500 focus:outline-none"
                            >
                                <option value="daily">‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô</option>
                                <option value="weekly">‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå</option>
                                <option value="monthly">‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</option>
                                <option value="yearly">‡∏£‡∏≤‡∏¢‡∏õ‡∏µ</option>
                            </select>
                        </div>
                    </div>

                    {/* Stats Cards */}
                    <div className="mb-8 grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-4">
                        <StatCard title="‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°" value="1,250,000" change="+12.5%" changeType="positive" icon="üí∞" />
                        <StatCard title="‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°" value="850 ‡∏ï‡∏±‡∏ô" change="+8.3%" changeType="positive" icon="‚öñÔ∏è" />
                        <StatCard title="‡∏•‡∏î‡∏´‡∏ô‡∏µ‡πâ" value="75,000" change="-5.2%" changeType="negative" icon="üìâ" />
                        <StatCard title="‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢" value="1,470 ‡∏ö‡∏≤‡∏ó/‡∏ï‡∏±‡∏ô" change="+3.8%" changeType="positive" icon="üìä" />
                    </div>

                    {/* Charts */}
                    <div className="mb-8 grid grid-cols-1 gap-6 lg:grid-cols-3">
                        <div className="rounded-xl bg-white p-6 shadow-sm lg:col-span-2">
                            <h2 className="mb-4 text-xl font-semibold text-gray-800">‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢</h2>
                            {/* <SalesChart data={mockData.salesTrend} /> */}
                            <SalesChartVariants.Animated data={mockData.salesTrend} height={450} />
                        </div>

                        <div className="rounded-xl bg-white p-6 shadow-sm">
                            <h2 className="mb-4 text-xl font-semibold text-gray-800">‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡πÅ‡∏¢‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h2>
                            <ProductPieChart data={mockData.productDistribution} />
                        </div>
                    </div>

                    {/* Recent Sales & Performance */}
                    <div className="grid grid-cols-1 gap-6 lg:grid-cols-3">
                        <div className="rounded-xl bg-white p-6 shadow-sm lg:col-span-2">
                            <h2 className="mb-4 text-xl font-semibold text-gray-800">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</h2>
                            <RecentSalesTable data={mockData.recentSales} />
                        </div>

                        <div className="rounded-xl bg-white p-6 shadow-sm">
                            <h2 className="mb-4 text-xl font-semibold text-gray-800">‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h2>
                            <div className="space-y-4">
                                {mockData.productPerformance.map((product, index) => (
                                    <div key={index} className="flex items-center justify-between rounded-lg bg-gray-50 p-3">
                                        <div>
                                            <p className="font-medium text-gray-800">{product.name}</p>
                                            <p className="text-sm text-gray-600">‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì: {product.volume}</p>
                                        </div>
                                        <div className="text-right">
                                            <p className="font-semibold text-gray-900">{product.revenue}</p>
                                            <p className={`text-sm ${product.change >= 0 ? 'text-green-600' : 'text-red-600'}`}>
                                                {product.change >= 0 ? '+' : ''}
                                                {product.change}%
                                            </p>
                                        </div>
                                    </div>
                                ))}
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </AppLayout>
    );
};

export default Dashboard;
